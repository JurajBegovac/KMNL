apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        applicationId "beg.hr.kmnl"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

kapt {
    generateStubs = true
}

ext {
    supportLibVersion = '25.3.1'
    rxjava2Version = '2.1.0'
    rxkotlinVersion = '2.1.0'
    rxandroidVersion = '2.0.1'
    rxbindingVersion = '2.0.0'
    rxlifecycleVersion = '2.0.1'
    daggerVersion = '2.8'
    retrofit2Version = '2.2.0'
    okhttp3Version = '3.7.0'
    reactivenetworkVersion = '0.9.0'
    leakCanaryVersion = '1.5'
    jsoupVersion = '1.10.2'
    espressoVersion = '2.2.2'
    junitVersion = '4.12'
    kluentVersion = '1.19'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:support-v4:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // rxjava 2
    compile "io.reactivex.rxjava2:rxjava:$rxjava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    compile "io.reactivex.rxjava2:rxkotlin:$rxkotlinVersion"

    // rx bindings
    compile("com.jakewharton.rxbinding2:rxbinding:$rxbindingVersion") {
        exclude group: 'com.android.support'
        exclude group: 'io.reactivex.rxjava2'
    }
    compile("com.jakewharton.rxbinding2:rxbinding-support-v4:$rxbindingVersion") {
        exclude group: 'com.android.support'
        exclude group: 'io.reactivex.rxjava2'
    }
    compile("com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxbindingVersion") {
        exclude group: 'com.android.support'
        exclude group: 'io.reactivex.rxjava2'
    }
    compile("com.jakewharton.rxbinding2:rxbinding-design:$rxbindingVersion") {
        exclude group: 'com.android.support'
        exclude group: 'io.reactivex.rxjava2'
    }
    compile("com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:$rxbindingVersion") {
        exclude group: 'com.android.support'
        exclude group: 'io.reactivex.rxjava2'
    }
    compile("com.jakewharton.rxbinding2:rxbinding-leanback-v17:$rxbindingVersion") {
        exclude group: 'com.android.support'
        exclude group: 'io.reactivex.rxjava2'
    }

    compile("com.trello.rxlifecycle2:rxlifecycle:$rxlifecycleVersion") {
        exclude module: 'jsr305'
    }
    compile("com.trello.rxlifecycle2:rxlifecycle-android:$rxlifecycleVersion") {
        exclude module: 'jsr305'
    }
    compile("com.trello.rxlifecycle2:rxlifecycle-components:$rxlifecycleVersion") {
        exclude module: 'jsr305'
        exclude module: 'appcompat-v7'
    }
    compile("com.trello.rxlifecycle2:rxlifecycle-navi:$rxlifecycleVersion") {
        exclude module: 'jsr305'
    }
    compile("com.trello.rxlifecycle2:rxlifecycle-kotlin:$rxlifecycleVersion") {
        exclude module: 'jsr305'
    }

    // dagger
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    provided 'javax.annotation:jsr250-api:1.0'

    // retrofit
    compile("com.squareup.retrofit2:retrofit:$retrofit2Version") {
        exclude module: 'okhttp'
    }
    compile "com.squareup.okhttp3:okhttp:$okhttp3Version"

    compile "com.github.pwittchen:reactivenetwork-rx2:$reactivenetworkVersion"

    // leak canary
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    compile "org.jsoup:jsoup:$jsoupVersion"

    androidTestCompile("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$junitVersion"
    testCompile("org.amshove.kluent:kluent:$kluentVersion") {
        exclude module: 'kotlin-stdlib'
    }
}
repositories {
    mavenCentral()
}
